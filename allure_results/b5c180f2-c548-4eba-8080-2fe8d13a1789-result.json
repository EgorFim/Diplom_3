{"name": "Тест на появление номера созданного заказа в в списке \"в работе\"", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <p class=\"AppHeader_header__linkText__3q_va ml-2\">...</p> is not clickable at point (300, 44). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\n  (Session info: chrome=131.0.6778.86)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7A61C6CF5+28821]\n\t(No symbol) [0x00007FF7A6133880]\n\t(No symbol) [0x00007FF7A5FD578A]\n\t(No symbol) [0x00007FF7A6030E8E]\n\t(No symbol) [0x00007FF7A602E92C]\n\t(No symbol) [0x00007FF7A602BAF6]\n\t(No symbol) [0x00007FF7A602AA51]\n\t(No symbol) [0x00007FF7A601CBA0]\n\t(No symbol) [0x00007FF7A604F2FA]\n\t(No symbol) [0x00007FF7A601C3F6]\n\t(No symbol) [0x00007FF7A604F510]\n\t(No symbol) [0x00007FF7A606F412]\n\t(No symbol) [0x00007FF7A604F0A3]\n\t(No symbol) [0x00007FF7A601A778]\n\t(No symbol) [0x00007FF7A601B8E1]\n\tGetHandleVerifier [0x00007FF7A64FFCED+3408013]\n\tGetHandleVerifier [0x00007FF7A651745F+3504127]\n\tGetHandleVerifier [0x00007FF7A650B63D+3455453]\n\tGetHandleVerifier [0x00007FF7A628BDFB+835995]\n\t(No symbol) [0x00007FF7A613EB9F]\n\t(No symbol) [0x00007FF7A613A854]\n\t(No symbol) [0x00007FF7A613A9ED]\n\t(No symbol) [0x00007FF7A612A1D9]\n\tBaseThreadInitThunk [0x00007FFF40EF7374+20]\n\tRtlUserThreadStart [0x00007FFF421BCC91+33]", "trace": "self = <tests.test_order_feed.TestOrderFeed object at 0x000001986044FEF0>, user_2 = <Response [200]>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4d9495c367b8ed0ab86f271e5d3d91d2\")>\n\n    @allure.title('Тест на появление номера созданного заказа в в списке \"в работе\"')\n    @allure.description('Проверяем что после создания заказа его номер появился в в поле \"в работе\"')\n    def test_new_order_in_work(self,user_2,driver):\n        login_page = LoginPage(driver)\n        main_page = MainPage(driver)\n        order_feed_page = OrderFeedPage(driver)\n        login_page.enter_account()\n        main_page.make_order()\n        main_page.wait_overlay()\n        m = main_page.give_ord_number()\n        main_page.close_number_order_window()\n>       main_page.button_lenta_zakazov_click()\n\ntests\\test_order_feed.py:85: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\main_page.py:15: in button_lenta_zakazov_click\n    return self.click_to_element(MainPageLocators.KNOPKA_LENTA_ZAKAZOV)\npages\\base_page.py:39: in click_to_element\n    self.driver.find_element(*locator).click()\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:384: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000019860419940>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF7A612A1D9]\\\\n\\\\tBaseThreadInitThunk [0x00007FFF40EF7374+20]\\\\n\\\\tRtlUserThreadStart [0x00007FFF421BCC91+33]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <p class=\"AppHeader_header__linkText__3q_va ml-2\">...</p> is not clickable at point (300, 44). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\nE         (Session info: chrome=131.0.6778.86)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7A61C6CF5+28821]\nE       \t(No symbol) [0x00007FF7A6133880]\nE       \t(No symbol) [0x00007FF7A5FD578A]\nE       \t(No symbol) [0x00007FF7A6030E8E]\nE       \t(No symbol) [0x00007FF7A602E92C]\nE       \t(No symbol) [0x00007FF7A602BAF6]\nE       \t(No symbol) [0x00007FF7A602AA51]\nE       \t(No symbol) [0x00007FF7A601CBA0]\nE       \t(No symbol) [0x00007FF7A604F2FA]\nE       \t(No symbol) [0x00007FF7A601C3F6]\nE       \t(No symbol) [0x00007FF7A604F510]\nE       \t(No symbol) [0x00007FF7A606F412]\nE       \t(No symbol) [0x00007FF7A604F0A3]\nE       \t(No symbol) [0x00007FF7A601A778]\nE       \t(No symbol) [0x00007FF7A601B8E1]\nE       \tGetHandleVerifier [0x00007FF7A64FFCED+3408013]\nE       \tGetHandleVerifier [0x00007FF7A651745F+3504127]\nE       \tGetHandleVerifier [0x00007FF7A650B63D+3455453]\nE       \tGetHandleVerifier [0x00007FF7A628BDFB+835995]\nE       \t(No symbol) [0x00007FF7A613EB9F]\nE       \t(No symbol) [0x00007FF7A613A854]\nE       \t(No symbol) [0x00007FF7A613A9ED]\nE       \t(No symbol) [0x00007FF7A612A1D9]\nE       \tBaseThreadInitThunk [0x00007FFF40EF7374+20]\nE       \tRtlUserThreadStart [0x00007FFF421BCC91+33]\n\n.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:232: ElementClickInterceptedException"}, "description": "Проверяем что после создания заказа его номер появился в в поле \"в работе\"", "steps": [{"name": "войти в аккаунт", "status": "passed", "steps": [{"name": "Заполняем поля email", "status": "passed", "start": 1733347176734, "stop": 1733347176875}, {"name": "заполняем поле пароль", "status": "passed", "start": 1733347176875, "stop": 1733347176966}, {"name": "проверка выхода из аккаунта", "status": "passed", "start": 1733347176966, "stop": 1733347177075}], "start": 1733347176496, "stop": 1733347177075}, {"name": "сделать заказ", "status": "passed", "start": 1733347177075, "stop": 1733347178425}, {"name": "дождаться изчезновения оверлея", "status": "passed", "start": 1733347178425, "stop": 1733347178463}, {"name": "сохранить номер заказа", "status": "passed", "start": 1733347178463, "stop": 1733347178532}, {"name": "закрыть окно с номером заказа", "status": "passed", "start": 1733347178532, "stop": 1733347179128}, {"name": "клик кнопки лента заказов", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <p class=\"AppHeader_header__linkText__3q_va ml-2\">...</p> is not clickable at point (300, 44). Other element would receive the click: <div class=\"Modal_modal_overlay__x2ZCr\"></div>\n  (Session info: chrome=131.0.6778.86)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7A61C6CF5+28821]\n\t(No symbol) [0x00007FF7A6133880]\n\t(No symbol) [0x00007FF7A5FD578A]\n\t(No symbol) [0x00007FF7A6030E8E]\n\t(No symbol) [0x00007FF7A602E92C]\n\t(No symbol) [0x00007FF7A602BAF6]\n\t(No symbol) [0x00007FF7A602AA51]\n\t(No symbol) [0x00007FF7A601CBA0]\n\t(No symbol) [0x00007FF7A604F2FA]\n\t(No symbol) [0x00007FF7A601C3F6]\n\t(No symbol) [0x00007FF7A604F510]\n\t(No symbol) [0x00007FF7A606F412]\n\t(No symbol) [0x00007FF7A604F0A3]\n\t(No symbol) [0x00007FF7A601A778]\n\t(No symbol) [0x00007FF7A601B8E1]\n\tGetHandleVerifier [0x00007FF7A64FFCED+3408013]\n\tGetHandleVerifier [0x00007FF7A651745F+3504127]\n\tGetHandleVerifier [0x00007FF7A650B63D+3455453]\n\tGetHandleVerifier [0x00007FF7A628BDFB+835995]\n\t(No symbol) [0x00007FF7A613EB9F]\n\t(No symbol) [0x00007FF7A613A854]\n\t(No symbol) [0x00007FF7A613A9ED]\n\t(No symbol) [0x00007FF7A612A1D9]\n\tBaseThreadInitThunk [0x00007FFF40EF7374+20]\n\tRtlUserThreadStart [0x00007FFF421BCC91+33]\n\n", "trace": "  File \"C:\\yandex\\Diplom_3\\.venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"C:\\yandex\\Diplom_3\\pages\\main_page.py\", line 15, in button_lenta_zakazov_click\n    return self.click_to_element(MainPageLocators.KNOPKA_LENTA_ZAKAZOV)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\yandex\\Diplom_3\\pages\\base_page.py\", line 39, in click_to_element\n    self.driver.find_element(*locator).click()\n  File \"C:\\yandex\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"C:\\yandex\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"C:\\yandex\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 384, in execute\n    self.error_handler.check_response(response)\n  File \"C:\\yandex\\Diplom_3\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 232, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1733347179128, "stop": 1733347180281}], "parameters": [{"name": "driver", "value": "'chrome'"}], "start": 1733347176496, "stop": 1733347180281, "uuid": "99bf4fdf-0357-4dbd-84bf-66d018dd3202", "historyId": "be327c91f6c8949b6d497dcc979d88b6", "testCaseId": "dc99ee58a8a17920f1d0c64bbe42e7e7", "fullName": "tests.test_order_feed.TestOrderFeed#test_new_order_in_work", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_feed"}, {"name": "subSuite", "value": "TestOrderFeed"}, {"name": "host", "value": "DESKTOP-QVHUDRP"}, {"name": "thread", "value": "14552-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_feed"}]}